function [fitresult, gof] = createFitTFnz(x, y0)
%CREATEFIT(X,Y)
%  Create a fit.
%
%  Data for 'TF fit to n_z' fit:
%      X Input : x
%      Y Output: y
%  Output:
%      fitresult : a fit object representing the fit.
%      gof : structure with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 16-Feb-2016 01:44:05


%% Fit: 'TF fit to n_z'.
y = y0 / max(y0);
center = x(y==1);
[xData, yData] = prepareCurveData( x, y );

% Set up fittype and options.
ft = fittype( 'amp*real((1-c^2*(x-x0)^2)^(3/2))', 'independent', 'x', 'dependent', 'y' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Algorithm = 'Levenberg-Marquardt';
opts.Display = 'Off';
opts.Robust = 'Bisquare';
opts.StartPoint = [1 1/center center];

% Fit model to data.
[fitresult, gof] = fit( xData, yData, ft, opts );

% Create a figure for the plots.
figure( 'Name', 'TF fit to n_z' );

% Plot fit with data.
subplot( 2, 1, 1 );
h = plot( fitresult, xData, yData );
legend( h, 'y vs. x', 'TF fit to n_z', 'Location', 'NorthEast' );
% Label axes
xlabel('z (m)');
ylabel('n (arb.)');
grid on

% Plot residuals.
subplot( 2, 1, 2 );
h = plot( fitresult, xData, yData, 'residuals' );
legend( h, 'TF fit to n_z - residuals', 'Zero Line', 'Location', 'NorthEast' );
% Label axes
xlabel('z (m)');
ylabel residuals;
grid on


